# Esse workflow foi auto-gerado em https://github.com/bcmes/project-x/actions/new com o template "java with Maven" :0
#
# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java-CI-with-Maven

#on: [push] # Obs.: Quando vc dá um merge na pull-request, isso é um push no github.

on:
  pull_request:
    branches:
      - develop

jobs:
  check-app:
    runs-on: ubuntu-latest #Container que executará os comandos
    steps:
    - uses: actions/checkout@v4 #Copia o codigo pro container
    - name: Set up JDK 21
      uses: actions/setup-java@v4 #Configura o JDK
      with:
        java-version: '21'
        distribution: 'zulu'
        cache: maven # para nao ter de baixar as dependencias do pom.xml toda vez.  A chave de cache será o conteúdo em hash do pom.xml
    - name: Build with Maven # package: roda os testes e gera o pacote
      run: mvn -B package
# Daqui pra baixo gera a imagem definida no Dockerfile e manda pro DockerHub, detalhes em: https://github.com/marketplace/actions/build-and-push-docker-images#examples
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: brunomeloesilva/project-x:latest
    - name: Cache SonarCloud packages #daqui pra baixo é comunicacao com sonarCloud
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=project-x


# Criando branch develop:
# git checkout -b develop
# git push origin develop

# Vá github, entre no projeto "project-x", va na aba "Settings" opcão "Branches"
# Em "Default branch" informe "develop", e clique em "Add rule"
# - Branch name pattern = develop
# - Require status checks to pass before merging = true
#   - Require branches to be up to date before merging = true
#   - Marque o "check-app" conforme linha 14 acima. Obs.: Ele reconhece o ultimo nome que executou no github !
# - Include administrators = true =>Os administradores também estão sujeitos as configuraćões
# - Restrict who can push to matching branches = true =>Assim ninguem pode mergear direto em develop.

# Vá github, entre no projeto "project-x", va na aba "Settings" opcão "Branches"
# Em "Default branch" informe "master", e clique em "Add rule"
# - Branch name pattern = master
# - Require status checks to pass before merging = true
#   - Require branches to be up to date before merging = true
#   - Marque o "check-app" conforme linha 14 acima.
# - Include administrators = true =>Os administradores também estão sujeitos as configuraćões
# - Restrict who can push to matching branches = true =>Assim ninguem pode mergear direto em develop.

# Mais detalhes no GitHub Docs.: https://docs.github.com/pt/actions/use-cases-and-examples/building-and-testing/building-and-testing-java-with-maven
